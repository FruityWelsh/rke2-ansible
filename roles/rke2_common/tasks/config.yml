---

- name: Does the /etc/rancher/rke2 dir exist?
  stat:
    path: /etc/rancher/rke2
  register: rke2_directory

- name: Create the /etc/rancher/rke2 config dir
  file:
    path: /etc/rancher/rke2
    state: directory
    recurse: yes
  when: not rke2_directory.stat.exists

- name: Does the /etc/rancher/rke2/config.yaml file exist?
  stat:
    path: /etc/rancher/rke2/config.yaml
  register: rke2_config

- name: create the /etc/rancher/rke2/config.yaml file
  file:
    path: /etc/rancher/rke2/config.yaml
    state: touch
    mode: "0640"
    owner: root
    group: root
  when: not rke2_config.stat.exists

# --node-label value                     (agent/node) Registering and starting kubelet with set of labels
# --node-taint value                     (agent/node) Registering kubelet with set of taints
- name: Combine rke2_config node labels and hostvar node labels
  set_fact:
    all_node_labels: "{{ rke2_config['node-label'] | default([]) }} + {{ node_labels | default([]) }}"

- name: Combine rke2_config node taints and hostvar node taints
  set_fact:
    all_node_taints: "{{ rke2_config['node-taint'] | default([]) }} + {{ node_taints | default([]) }}"

- name: Add node labels to rke2_config
  ansible.utils.update_fact:
    updates:
      - path: rke2_config["node-label"]
        value: "{{ all_node_labels }}"
      - path: rke2_config["node-taint"]
        value: "{{ all_node_taints }}"
  register: updated_rke2_config

- name: Update rke2_config to take value of updated_rke2_config
  set_fact:
    rke2_config: "{{ updated_rke2_config.rke2_config }}"

# --node-ip value, -i value (agent/networking) IPv4/IPv6 addresses to advertise for node
- name: Add node-ip to rke2_config
  ansible.utils.update_fact:
    updates:
      - path: rke2_config["node-ip"]
        value: "{{ node_ip }}"
  when: (node_ip is defined) and (node_ip|length > 0)
  register: updated_rke2_config

- name: Update rke2_config to take value of updated_rke2_config  # noqa no-handler
  set_fact:
    rke2_config: "{{ updated_rke2_config.rke2_config }}"
  when: updated_rke2_config.changed

# --node-name value (agent/node) Node name [$RKE2_NODE_NAME]
- name: Add node-name to rke2_config
  ansible.utils.update_fact:
    updates:
      - path: rke2_config["node-name"]
        value: "{{ node_name }}"
  when: (node_name is defined) and (node_name|length > 0)
  register: updated_rke2_config

- name: Update rke2_config to take value of updated_rke2_config  # noqa no-handler
  set_fact:
    rke2_config: "{{ updated_rke2_config.rke2_config }}"
  when: updated_rke2_config.changed

# --bind-address value (listener) rke2 bind address (default: 0.0.0.0)
- name: Add bind-address to rke2_config
  ansible.utils.update_fact:
    updates:
      - path: rke2_config["bind-address"]
        value: "{{ bind_address }}"
  when: (bind_address is defined) and (bind_address|length > 0)
  register: updated_rke2_config

- name: Update rke2_config to take value of updated_rke2_config  # noqa no-handler
  set_fact:
    rke2_config: "{{ updated_rke2_config.rke2_config }}"
  when: updated_rke2_config.changed

# --advertise-address value (listener) IPv4 address that apiserver uses
# to advertise to members of the cluster (default: node-external-ip/node-ip)
- name: Add advertise-address to rke2_config
  ansible.utils.update_fact:
    updates:
      - path: rke2_config["advertise-address"]
        value: "{{ advertise_address }}"
  when: (advertise_address is defined) and (advertise_address|length > 0)
  register: updated_rke2_config

- name: Update rke2_config to take value of updated_rke2_config  # noqa no-handler
  set_fact:
    rke2_config: "{{ updated_rke2_config.rke2_config }}"
  when: updated_rke2_config.changed

# --node-external-ip value (agent/networking) IPv4/IPv6 external IP addresses to advertise for node
- name: Add node-external-ip to rke2_config
  ansible.utils.update_fact:
    updates:
      - path: rke2_config["node-external-ip"]
        value: "{{ node_external_ip }}"
  when: (node_external_ip is defined) and (node_external_ip|length > 0)
  register: updated_rke2_config

- name: Update rke2_config to take value of updated_rke2_config  # noqa no-handler
  set_fact:
    rke2_config: "{{ updated_rke2_config.rke2_config }}"
  when: updated_rke2_config.changed

- name: Create tmp config.yaml
  copy:
    content: "{{ rke2_config | to_nice_yaml(indent=0) }}"
    dest: /tmp/ansible-config.txt
    mode: "0600"
    owner: root
    group: root

- name: Stat tmp config
  stat:
    path: /tmp/ansible-config.txt
  register: tmp_config

- name: Get cksum of tmp config
  set_fact:
    tmp_sha1: "{{ tmp_config.stat.checksum }}"

- name: Drop in final /etc/rancher/rke2/config.yaml
  copy:
    content: "{{ rke2_config | to_nice_yaml(indent=0) }}"
    dest: /etc/rancher/rke2/config.yaml
    mode: "0640"
    owner: root
    group: root
  when: tmp_sha1 != rke2_config.stat.checksum

- name: Restart rke2-server if package installed and config changed
  service:
    state: restarted
    name: rke2-server
  when: 'rke2-server' in services and tmp_sha1 != rke2_config.stat.checksum

- name: Restart rke2-agent if package installed and config changed
  service:
    state: restarted
    name: rke2-agent
  when: "rke2-agent' in services" and tmp_sha1 != rke2_config.stat.checksum
